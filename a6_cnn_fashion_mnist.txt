import pandas as pd
import numpy as np
import tensorflow as tf
from matplotlib import pyplot as plt
from tensorflow.keras import datasets,models,layers

(training_images, training_labels), (test_images, test_labels) = datasets.fashion_mnist.load_data()

training_images = training_images.reshape(60000,28,28,1) 
test_images = test_images.reshape(10000, 28, 28, 1)
training_images, test_images = training_images/255.0 , test_images/255.0

model = tf.keras.models.Sequential([
    tf.keras.layers.Conv2D(64, (3,3), activation='relu', input_shape=(28,28,1)),
    tf.keras.layers.MaxPooling2D(2,2),
    tf.keras.layers.Conv2D(64, (3,3), activation='relu'),
    tf.keras.layers.MaxPooling2D(2,2),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(10, activation = 'softmax')
])
model.compile(optimizer = 'adam', loss="sparse_categorical_crossentropy", metrics = ['accuracy'])
model.summary()

history = model.fit(training_images, training_labels, epochs=6,validation_data=(test_images,test_labels))

test_loss, test_acc = model.evaluate(test_images, test_labels)
print(f"Test Accuracy: ", test_acc)


from sklearn.metrics import classification_report
predictions = model.predict(test_images)
predictions = np.argmax(predictions, axis = 1)
class_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat', 'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']
print("Classification Report:\n", classification_report(test_labels,predictions,target_names=class_names))

# Plot confusion matrix heatmap
from sklearn.metrics import confusion_matrix
plt.figure(figsize=(8, 8))
cm = confusion_matrix(test_labels, predictions)
plt.imshow(cm, interpolation='nearest', cmap='Blues')
plt.title('Confusion Matrix')
plt.colorbar()
tick_marks = np.arange(len(class_names))
plt.xticks(tick_marks, class_names, rotation=45)
plt.yticks(tick_marks, class_names)
# Fix: Limit heatmap labels to actual class range
num_classes = len(class_names)
for i in range(num_classes):
    for j in range(num_classes):
        plt.text(j, i, cm[i, j], ha='center', va='center', fontsize=8)
plt.tight_layout()
plt.show()

'''
from tensorflow.keras.datasets import fashion_mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense
from tensorflow.keras.preprocessing.image import ImageDataGenerator
import matplotlib.pyplot as plt
import numpy as np
from sklearn.metrics import confusion_matrix
import pandas as pd


# Load the Fashion-MNIST dataset
# (train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()

#If THEY GIVE THE DATASET, THEN USE THE CODE BELOW

train = pd.read_csv('fashion-mnist_train.csv')
test = pd.read_csv('fashion-mnist_test.csv')
train_images = train.drop(['label'],axis=1)
train_labels = train['label']
test_images = test.drop(['label'],axis=1)
test_labels = test['label']

# Normalize pixel values
train_images = train_images.astype("float32") / 255.0  
test_images = test_images.astype("float32") / 255.0

# Preprocess data
# train_images = train_images.reshape(-1, 28, 28, 1)  # Reshape to 4D for CNNs
# test_images = test_images.reshape(-1, 28, 28, 1)

#INCASE OF GIVEN CSV DATASET
train_images = train_images.values.reshape(-1, 28, 28, 1)  # Reshape to 4D for CNNs
test_images = test_images.values.reshape(-1, 28, 28, 1)
'''